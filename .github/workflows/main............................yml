name: RDP Windows - RTX 4080 Simulation

on:
  workflow_dispatch:

jobs:
  rtx4080-rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Configure RTX 4080 Registry
      run: |
        $gpuPath = "HKLM:\SYSTEM\CurrentControlSet\Enum\PCI\VEN_10DE&DEV_2684"
        New-Item -Path $gpuPath -Force | Out-Null
        Set-ItemProperty -Path $gpuPath -Name "DeviceDesc" -Value "NVIDIA GeForce RTX 4080" -Force

    - name: Configure RDP
      run: |
        Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
        netsh advfirewall firewall add rule name="RDP" dir=in protocol=TCP localport=3389 action=allow

    - name: Create User
      run: |
        $password = "Password123!"
        $securePassword = ConvertTo-SecureString $password -AsPlainText -Force
        New-LocalUser -Name "RTXUser" -Password $securePassword -AccountNeverExpires
        Add-LocalGroupMember -Group "Administrators" -Member "RTXUser"
        echo "RDP_USERNAME=RTXUser" >> $env:GITHUB_ENV
        echo "RDP_PASSWORD=Password123!" >> $env:GITHUB_ENV

    - name: Install Tailscale
      run: |
        $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi"
        $installerPath = "$env:TEMP\tailscale.msi"
        Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath -UseBasicParsing
        Start-Process msiexec.exe -Wait -ArgumentList @("/i", "`"$installerPath`"", "/quiet")

    - name: Connect Tailscale
      run: |
        & "C:\Program Files\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=rtx4080-$env:GITHUB_RUN_ID
        Start-Sleep -Seconds 10
        $tsIP = & "C:\Program Files\Tailscale\tailscale.exe" ip -4
        echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV

    - name: Display Info
      run: |
        Write-Host "ðŸŽ¯ RDP Ready!"
        Write-Host "IP: $env:TAILSCALE_IP"
        Write-Host "User: $env:RDP_USERNAME"
        Write-Host "Password: $env:RDP_PASSWORD"

    - name: Keep Alive for 6 Hours
      run: |
        for ($i = 1; $i -le 216; $i++) {
            Write-Host "[$i/216] âœ… RTX 4080 Active - Time left: $((216-$i)*100) seconds"
            Start-Sleep -Seconds 100
        }
